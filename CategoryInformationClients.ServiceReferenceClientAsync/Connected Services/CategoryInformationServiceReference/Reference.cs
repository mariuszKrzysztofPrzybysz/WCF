//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryInformationRequest", Namespace="http://schemas.datacontract.org/2004/07/CategoryInformationService.Messages")]
    [System.SerializableAttribute()]
    public partial class CategoryInformationRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryInformationResponse", Namespace="http://schemas.datacontract.org/2004/07/CategoryInformationService.Messages")]
    [System.SerializableAttribute()]
    public partial class CategoryInformationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.Category[] CategoriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.Category[] Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="CategoryInformationService.Types")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoryInformationServiceReference.ICategoryInformationService")]
    public interface ICategoryInformationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoryInformationService/GetCategoryInformation", ReplyAction="http://tempuri.org/ICategoryInformationService/GetCategoryInformationResponse")]
        CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationResponse GetCategoryInformation(CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICategoryInformationService/GetCategoryInformation", ReplyAction="http://tempuri.org/ICategoryInformationService/GetCategoryInformationResponse")]
        System.IAsyncResult BeginGetCategoryInformation(CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest request, System.AsyncCallback callback, object asyncState);
        
        CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationResponse EndGetCategoryInformation(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryInformationServiceChannel : CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.ICategoryInformationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoryInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoryInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryInformationServiceClient : System.ServiceModel.ClientBase<CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.ICategoryInformationService>, CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.ICategoryInformationService {
        
        private BeginOperationDelegate onBeginGetCategoryInformationDelegate;
        
        private EndOperationDelegate onEndGetCategoryInformationDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoryInformationCompletedDelegate;
        
        public CategoryInformationServiceClient() {
        }
        
        public CategoryInformationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryInformationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryInformationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryInformationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetCategoryInformationCompletedEventArgs> GetCategoryInformationCompleted;
        
        public CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationResponse GetCategoryInformation(CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest request) {
            return base.Channel.GetCategoryInformation(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCategoryInformation(CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategoryInformation(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationResponse EndGetCategoryInformation(System.IAsyncResult result) {
            return base.Channel.EndGetCategoryInformation(result);
        }
        
        private System.IAsyncResult OnBeginGetCategoryInformation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest request = ((CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest)(inValues[0]));
            return this.BeginGetCategoryInformation(request, callback, asyncState);
        }
        
        private object[] OnEndGetCategoryInformation(System.IAsyncResult result) {
            CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationResponse retVal = this.EndGetCategoryInformation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoryInformationCompleted(object state) {
            if ((this.GetCategoryInformationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoryInformationCompleted(this, new GetCategoryInformationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoryInformationAsync(CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest request) {
            this.GetCategoryInformationAsync(request, null);
        }
        
        public void GetCategoryInformationAsync(CategoryInformationClients.ServiceReferenceClientAsync.CategoryInformationServiceReference.CategoryInformationRequest request, object userState) {
            if ((this.onBeginGetCategoryInformationDelegate == null)) {
                this.onBeginGetCategoryInformationDelegate = new BeginOperationDelegate(this.OnBeginGetCategoryInformation);
            }
            if ((this.onEndGetCategoryInformationDelegate == null)) {
                this.onEndGetCategoryInformationDelegate = new EndOperationDelegate(this.OnEndGetCategoryInformation);
            }
            if ((this.onGetCategoryInformationCompletedDelegate == null)) {
                this.onGetCategoryInformationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryInformationCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoryInformationDelegate, new object[] {
                        request}, this.onEndGetCategoryInformationDelegate, this.onGetCategoryInformationCompletedDelegate, userState);
        }
    }
}
